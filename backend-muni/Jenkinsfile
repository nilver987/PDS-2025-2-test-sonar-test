pipeline {
    agent any

    environment {
        SONARQUBE = credentials('sonar-token') // Configura en Jenkins el token con este ID
    }

    stages {
        stage('Checkout') {
            steps {
                echo '📥 Clonando repositorio...'
                git branch: 'main', url: 'https://github.com/tuusuario/turepo.git'
            }
        }

        stage('Instalar dependencias') {
            steps {
                echo '📦 Instalando dependencias de Laravel...'
                sh 'composer install --no-interaction --prefer-dist --optimize-autoloader'
                sh 'cp .env.example .env || true'
                sh 'php artisan key:generate'
            }
        }

        stage('Ejecutar pruebas unitarias') {
            steps {
                echo '🧪 Ejecutando pruebas unitarias...'
                sh 'php artisan test --coverage-clover=coverage.xml'
            }
        }

        stage('Análisis de SonarQube') {
            environment {
                SONAR_SCANNER_OPTS = "-Dsonar.projectKey=laravel-proyecto -Dsonar.host.url=http://docker.sonar:9000 -Dsonar.login=${SONARQUBE}"
            }
            steps {
                echo '🔍 Analizando con SonarQube...'
                sh '''
                    sonar-scanner \
                      -Dsonar.projectKey=laravel-proyecto \
                      -Dsonar.sources=. \
                      -Dsonar.php.coverage.reportPaths=coverage.xml \
                      -Dsonar.host.url=http://docker.sonar:9000 \
                      -Dsonar.login=${SONARQUBE}
                '''
            }
        }

        stage('Construir imagen Docker') {
            steps {
                echo '🐳 Construyendo imagen Docker...'
                sh 'docker build -t laravel-app:latest .'
            }
        }

        stage('Desplegar contenedor') {
            steps {
                echo '🚀 Desplegando contenedor...'
                sh 'docker run -d --name laravel-app -p 8080:80 laravel-app:latest'
            }
        }
    }

    post {
        always {
            echo '📊 Pipeline completado.'
        }
        success {
            echo '✅ Todo correcto.'
        }
        failure {
            echo '❌ Algo falló en el pipeline.'
        }
    }
}
